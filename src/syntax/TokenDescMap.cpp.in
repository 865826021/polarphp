// This source file is part of the polarphp.org open source project
//
// Copyright (c) 2017 - 2018 polarphp software foundation
// Copyright (c) 2017 - 2018 zzu_softboy <zzu_softboy@163.com>
// Licensed under Apache License v2.0 with Runtime Library Exception
//
// See https://polarphp.org/LICENSE.txt for license information
// See https://polarphp.org/CONTRIBUTORS.txt for the list of polarphp project authors
//
// Created by polarboy on 2019/05/09.

#include "polarphp/syntax/TokenKinds.h"
#include "polarphp/syntax/internal/YYParserDefs.h"
#include "polarphp/basic/adt/StringRef.h"
#include <map>

namespace polar::syntax {
namespace {
using TokenDescItemType = const std::tuple<const std::string, const std::string, const std::string>;
static const std::map<TokenKindType, TokenDescItemType> scg_tokenDescTable{
   __TOKEN_RECORDS__
};
} // anonymous namespace

const StringRef retrieve_token_desc(TokenKindType kind) 
{
   if (scg_tokenDescTable.find(kind) == scg_tokenDescTable.end()) {
      kind = TokenKindType::T_UNKOWN_MARK;
   }
   TokenDescItemType &item = scg_tokenDescTable.at(kind);
   return std::get<2>(item);
}

} // polar::syntax