<?php
// This source file is part of the polarphp.org open source project
//
// Copyright (c) 2017 - 2019 polarphp software foundation
// Copyright (c) 2017 - 2019 zzu_softboy <zzu_softboy@163.com>
// Licensed under Apache License v2.0 with Runtime Library Exception
//
// See https://polarphp.org/LICENSE.txt for license information
// See https://polarphp.org/CONTRIBUTORS.txt for the list of polarphp project authors
//
// Created by polarboy on 2019/10/29.

use Gyb\Syntax\Token\DeclKeyword;
use Gyb\Syntax\Token\ExprKeyword;
use Gyb\Syntax\Token\InternalKeyword;
use Gyb\Syntax\Token\Keyword;
use Gyb\Syntax\Token\Misc;
use Gyb\Syntax\Token\Punctuator;
use Gyb\Syntax\Token\StmtKeyword;

return array(
   new InternalKeyword('End', 'END', 'end of file', 1),
   new Keyword('Line', 'T_LINE', '__LINE__', 2),
   new Keyword('File', 'T_FILE', '__FILE__', 3),
   new Keyword('Dir', 'T_DIR','__DIR__', 4),
   new Keyword('ClassConst', 'T_CLASS_CONST', '__CLASS__', 5),
   new Keyword('TraitConst', 'T_TRAIT_CONST', '__TRAIT__', 6),
   new Keyword('MethodConst', 'T_METHOD_CONST', '__METHOD__', 7),
   new Keyword('FuncConst', 'T_FUNC_CONST', '__FUNCTION__', 8),
   new Keyword('NamespaceConst', 'T_NS_CONST', '__NAMESPACE__', 9),
   new DeclKeyword('Namespace', 'T_NAMESPACE', 'namespace', 10),
   new DeclKeyword('Class', 'T_CLASS', 'class', 11),
   new DeclKeyword('Trait', 'T_TRAIT', 'trait', 12),
   new DeclKeyword('Interface', 'T_INTERFACE', 'interface', 13),
   new DeclKeyword('Extends', 'T_EXTENDS', 'extends', 14),
   new DeclKeyword('Implements', 'T_IMPLEMENTS', 'implements', 15),
   new DeclKeyword('Function', 'T_FUNCTION', 'function', 16),
   new DeclKeyword('Fn', 'T_FN', 'fn', 17),
   new DeclKeyword('Const', 'T_CONST', 'const', 18),
   new DeclKeyword('Var', 'T_VAR', 'var', 19),
   new DeclKeyword('Use', 'T_USE', 'use', 20),
   new DeclKeyword('Insteadof', 'T_INSTEADOF', 'insteadof', 21),
   new DeclKeyword('As', 'T_AS', 'as', 22),
   new DeclKeyword('Global', 'T_GLOBAL', 'global', 23),
   new DeclKeyword('Static', 'T_STATIC', 'static', 24),
   new DeclKeyword('Abstract', 'T_ABSTRACT', 'abstract', 25),
   new DeclKeyword('Final', 'T_FINAL', 'final', 26),
   new DeclKeyword('Private', 'T_PRIVATE', 'private', 27),
   new DeclKeyword('Protected', 'T_PROTECTED', 'protected', 28),
   new DeclKeyword('Public', 'T_PUBLIC', 'public', 29),
   new DeclKeyword('List', 'T_LIST', 'list', 30),
   new DeclKeyword('Array', 'T_ARRAY', 'array', 31),
   new DeclKeyword('Callable', 'T_CALLABLE', 'callable', 32),
   new DeclKeyword('ThreadLocal', 'T_THREAD_LOCAL', 'thread_local', 33),
   new DeclKeyword('Module', 'T_MODULE', 'module', 34),
   new DeclKeyword('Package', 'T_PACKAGE', 'package', 35),
   new DeclKeyword('Async', 'T_ASYNC', 'async', 36),
   new DeclKeyword('Export', 'T_EXPORT', 'export', 37),
   new StmtKeyword('Defer', 'T_DEFER', 'defer', 38),
   new StmtKeyword('If', 'T_IF', 'if', 39),
   new StmtKeyword('ElseIf', 'T_ELSEIF', 'elseif', 40),
   new StmtKeyword('Else', 'T_ELSE', 'else', 41),
   new StmtKeyword('Echo', 'T_ECHO', 'echo', 42),
   new StmtKeyword('Do', 'T_DO', 'do', 43),
   new StmtKeyword('While', 'T_WHILE', 'while', 44),
   new StmtKeyword('For', 'T_FOR', 'for', 45),
   new StmtKeyword('Foreach', 'T_FOREACH', 'foreach', 46),
   new StmtKeyword('Switch', 'T_SWITCH', 'switch', 47),
   new StmtKeyword('Case', 'T_CASE', 'case', 48),
   new StmtKeyword('Default', 'T_DEFAULT', 'default', 49),
   new StmtKeyword('Break', 'T_BREAK', 'break', 50),
   new StmtKeyword('Continue', 'T_CONTINUE', 'continue', 51),
   new StmtKeyword('Fallthrough', 'T_FALLTHROUGH', 'fallthrough', 52),
   new StmtKeyword('Goto', 'T_GOTO', 'goto', 53),
   new StmtKeyword('Return', 'T_RETURN', 'return', 54),
   new StmtKeyword('Try', 'T_TRY', 'try', 55),
   new StmtKeyword('Catch', 'T_CATCH', 'catch', 56),
   new StmtKeyword('Finally', 'T_FINALLY', 'finally', 57),
   new StmtKeyword('Throw', 'T_THROW', 'throw', 58),
   new ExprKeyword('Unset', 'T_UNSET', 'unset', 59),
   new ExprKeyword('Isset', 'T_ISSET', 'isset', 60),
   new ExprKeyword('Empty', 'T_EMPTY', 'empty', 61),
   new ExprKeyword('HaltCompiler', 'T_HALT_COMPILER', '__halt_compiler', 62),
   new ExprKeyword('Eval', 'T_EVAL', 'eval', 63),
   new ExprKeyword('Include', 'T_INCLUDE', 'include', 64),
   new ExprKeyword('IncludeOnce', 'T_INCLUDE_ONCE', 'include_once', 65),
   new ExprKeyword('Require', 'T_REQUIRE', 'require', 66),
   new ExprKeyword('RequireOnce', 'T_REQUIRE_ONCE', 'require_once', 67),
   new ExprKeyword('LogicOr', 'T_LOGICAL_OR', 'or', 68),
   new ExprKeyword('LogicXor', 'T_LOGICAL_XOR', 'xor', 69),
   new ExprKeyword('LogicAnd', 'T_LOGICAL_AND', 'and', 70),
   new ExprKeyword('Print', 'T_PRINT', 'print', 71),
   new ExprKeyword('Yield', 'T_YIELD', 'yield', 72),
   new ExprKeyword('YieldFrom', 'T_YIELD_FROM', 'yield from', 73),
   new ExprKeyword('Instanceof', 'T_INSTANCEOF', 'instanceof', 74),
   new ExprKeyword('IntCast', 'T_INT_CAST', '(int)', 75),
   new ExprKeyword('DoubleCast', 'T_DOUBLE_CAST', '(double)', 76),
   new ExprKeyword('StringCast', 'T_STRING_CAST', '(string)', 77),
   new ExprKeyword('ArrayCast', 'T_ARRAY_CAST', '(array)', 78),
   new ExprKeyword('ObjectCast', 'T_OBJECT_CAST', '(object)', 79),
   new ExprKeyword('BoolCast', 'T_BOOL_CAST', '(bool)', 80),
   new ExprKeyword('UnsetCast', 'T_UNSET_CAST', '(unset)', 81),
   new ExprKeyword('New', 'T_NEW', 'new', 82),
   new ExprKeyword('Clone', 'T_CLONE', 'clone', 83),
   new ExprKeyword('Exit', 'T_EXIT', 'exit', 84),
   new ExprKeyword('Declare', 'T_DECLARE', 'declare', 85),
   new ExprKeyword('ClassReStatic', 'T_CLASS_REF_STATIC', 'static', 86),
   new ExprKeyword('ClassRefSelf', 'T_CLASS_REF_SELF', 'self', 87),
   new ExprKeyword('ClassRefParent', 'T_CLASS_REF_PARENT', 'parent', 88),
   new ExprKeyword('ObjRef', 'T_OBJ_REF', 'this', 89),
   new ExprKeyword('True', 'T_TRUE', 'true', 90),
   new ExprKeyword('False', 'T_FALSE', 'false', 91),
   new ExprKeyword('Null', 'T_NULL', 'null', 92),
   new ExprKeyword('Await', 'T_AWAIT', 'await', 93),
   new Punctuator('PlusSign', 'T_PLUS_SIGN', '+', 94),
   new Punctuator('MinusSign', 'T_MINUS_SIGN', '-', 95),
   new Punctuator('MulSign', 'T_MUL_SIGN', '*',96),
   new Punctuator('DivSign', 'T_DIV_SIGN', '/', 97),
   new Punctuator('ModSign', 'T_MOD_SIGN', '%', 98),
   new Punctuator('Equal', 'T_EQUAL', '=', 99),
   new Punctuator('StrConcat', 'T_STR_CONCAT', '.', 100),
   new Punctuator('PlusEqual', 'T_PLUS_EQUAL', '+=', 101),
   new Punctuator('MinusEqual', 'T_MINUS_EQUAL', '-=', 102),
   new Punctuator('MulEqual', 'T_MUL_EQUAL', '*=', 103),
   new Punctuator('DivEqual', 'T_DIV_EQUAL', '/=', 104),
   new Punctuator('StrConcatEqual', 'T_STR_CONCAT_EQUAL', '.=', 105),
   new Punctuator('ModEqual', 'T_MOD_EQUAL', '%=', 106),
   new Punctuator('AndEqual', 'T_AND_EQUAL', '&=', 107),
   new Punctuator('OrEqual', 'T_OR_EQUAL', '|=', 108),
   new Punctuator('XorEqual', 'T_XOR_EQUAL', '^=', 109),
   new Punctuator('ShiftLeftEqual', 'T_SL_EQUAL', '<<=', 110),
   new Punctuator('ShiftRightEqual', 'T_SR_EQUAL', '>>=', 111),
   new Punctuator('CoalesceEqual', 'T_COALESCE_EQUAL', '??=', 112),
   new Punctuator('BooleanOr', 'T_BOOLEAN_OR', '||', 113),
   new Punctuator('BooleanAnd', 'T_BOOLEAN_AND', '&&', 114),
   new Punctuator('IsEqual', 'T_IS_EQUAL', '==', 115),
   new Punctuator('IsNotEqual', 'T_IS_NOT_EQUAL', '!=', 116),
   new Punctuator('IsIdentical', 'T_IS_IDENTICAL', '===', 117),
   new Punctuator('IsNotIdentical', 'T_IS_NOT_IDENTICAL', '!==', 118),
   new Punctuator('IsSmaller', 'T_IS_SMALLER', '<', 119),
   new Punctuator('IsSmallerOrEqual', 'T_IS_SMALLER_OR_EQUAL', '<=', 120),
   new Punctuator('IsGreaterOrEqual', 'T_IS_GREATER_OR_EQUAL', '>=', 121),
   new Punctuator('IsGreater', 'T_IS_GREATER', '>', 122),
   new Punctuator('Spaceship', 'T_SPACESHIP', '<=>', 123),
   new Punctuator('ShiftLeft', 'T_SL', '<<', 124),
   new Punctuator('ShiftRight', 'T_SR', '>>', 125),
   new Punctuator('Inc', 'T_INC', '++', 126),
   new Punctuator('Dec', 'T_DEC', '--', 127),
   new Punctuator('NamespaceSeparator', 'T_NS_SEPARATOR', '\\', 128),
   new Punctuator('Ellipsis', 'T_ELLIPSIS', '...', 129),
   new Punctuator('Coalesce', 'T_COALESCE', '??', 130),
   new Punctuator('Pow', 'T_POW', '**', 131),
   new Punctuator('PowEqual', 'T_POW_EQUAL', '**=', 132),
   new Punctuator('ObjectOperator', 'T_OBJECT_OPERATOR', '->', 133),
   new Punctuator('DoubleArrow', 'T_DOUBLE_ARROW', '=>', 134),
   new Punctuator('DollarOpenCurlyBraces', 'T_DOLLAR_OPEN_CURLY_BRACES', '${', 135),
   new Punctuator('CurlyOpen', 'T_CURLY_OPEN', '{$', 136),
   new Punctuator('PaamayimNekudotayim', 'T_PAAMAYIM_NEKUDOTAYIM', '::', 137),
   new Punctuator('LeftParen', 'T_LEFT_PAREN', '(', 138),
   new Punctuator('RightParen', 'T_RIGHT_PAREN', ')', 139),
   new Punctuator('LeftBrace', 'T_LEFT_BRACE', '{', 140),
   new Punctuator('RightBrace', 'T_RIGHT_BRACE', '}', 141),
   new Punctuator('LeftSquareBracket', 'T_LEFT_SQUARE_BRACKET', '[', 142),
   new Punctuator('RightSquareBracket', 'T_RIGHT_SQUARE_BRACKET', ']', 143),
   new Punctuator('LeftAngle', 'T_LEFT_ANGLE', '<', 144),
   new Punctuator('RightAngle', 'T_RIGHT_ANGLE', '>', 145),
   new Punctuator('Comma', 'T_COMMA', ',', 146),
   new Punctuator('Colon', 'T_COLON', ':', 147),
   new Punctuator('Semicolon', 'T_SEMICOLON', ';', 148),
   new Punctuator('Backtick', 'T_BACKTICK', '`', 149),
   new Punctuator('SingleStrQuote', 'T_SINGLE_QUOTE', '\'', 150),
   new Punctuator('DoubleStrQuote', 'T_DOUBLE_QUOTE', '"', 151),
   new Punctuator('VerticalBar', 'T_VBAR', '|', 152),
   new Punctuator('Caret', 'T_CARET', '^', 153),
   new Punctuator('ExclamationMark', 'T_EXCLAMATION_MARK', '!', 154),
   new Punctuator('Tilde', 'T_TILDE', '~', 155),
   new Punctuator('Dollar', 'T_DOLLAR_SIGN', '$', 156),
   new Punctuator('QuestionMark', 'T_QUESTION_MARK', '?', 157),
   new Punctuator('ErrorSuppressSign', 'T_ERROR_SUPPRESS_SIGN', '@', 158),
   new Punctuator('Ampersand', 'T_AMPERSAND', '&', 159),
   new Misc('LNumber', 'T_LNUMBER', 'integer number', 160),
   new Misc('DNumber', 'T_DNUMBER', 'floating-point number', 161),
   new Misc('IdentifierString', 'T_IDENTIFIER_STRING', 'identifier', 162),
   new Misc('Variable', 'T_VARIABLE', 'variable', 163),
   new Misc('EncapsedAndWhitespace', 'T_ENCAPSED_AND_WHITESPACE', 'quoted-string and whitespace', 164),
   new Misc('ConstantEncapsedString', 'T_CONSTANT_ENCAPSED_STRING', 'quoted-string', 165),
   new Misc('StringVarName', 'T_STRING_VARNAME', 'variable name', 166),
   new Misc('NumString', 'T_NUM_STRING', 'number', 167),
   new Misc('WhiteSpace', 'T_WHITESPACE', 'whitespace', 168),
   new Misc('PrefixOperator','T_PREFIX_OPERATOR', 'prefix operator', 169),
   new Misc('PostfixOperator', 'T_POSTFIX_OPERATOR', 'postfix operator', 170),
   new Misc('BinaryOperator', 'T_BINARY_OPERATOR', 'binary operator', 171),
   new Misc('Comment', 'T_COMMENT', 'comment', 172),
   new Misc('DocComment', 'T_DOC_COMMENT', 'doc comment', 173),
   new Misc('OpenTag', 'T_OPEN_TAG', 'open tag', 174),
   new Misc('OpenTagWithEcho', 'T_OPEN_TAG_WITH_ECHO', 'open tag with echo', 175),
   new Misc('CloseTag', 'T_CLOSE_TAG', 'close tag', 176),
   new Misc('StartHeredoc', 'T_START_HEREDOC', 'heredoc start', 177),
   new Misc('EndHereDoc', 'T_END_HEREDOC', 'heredoc end', 178),
   new Misc('Error', 'T_ERROR', 'error', 179),
   new Misc('Unknown', 'T_UNKNOWN_MARK', 'unknown token', 180),
);